package com.estore.testcases;

import java.util.Iterator;
import java.util.List;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.estore.pages.Cart;
import com.estore.pages.CategoryPageOne;
import com.estore.pages.CheckOutStepOne;
import com.estore.pages.CheckOutStepThree;
import com.estore.pages.CheckOutStepTwo;
import com.estore.pages.OrderConfirmation;
import com.estore.pages.ProductDetailsPage;
import com.estore.pages.SpinternetCart;
import com.estore.pages.SpinternetCheckoutBillingPage;
import com.estore.pages.SpinternetCheckoutDelivery;
import com.estore.pages.SpinternetCheckoutMethod;
import com.estore.pages.SpinternetCheckoutPageOne;
import com.estore.pages.SpinternetCheckoutPageTwo;
import com.estore.pages.SpinternetDefaultStoreHome;
import com.estore.pages.SpinternetHome;
import com.estore.pages.SpinternetLogin;
import com.estore.pages.SpinternetOrderConfirmation;
import com.estore.pages.SpinternetOrderReviewPage;
import com.estore.pages.SpinternetStoreFinderResults;
import com.estore.pages.SpinternetStoreProductDetails;
import com.estore.pages.SpinternetStoreProducts;
import com.estore.pages.StoreHomePage;
import com.estore.pages.TMCreateOrder;
import com.estore.util.StringHandling;
import com.estore.util.TestBase;

public class ECAPlaceOrders extends TestBase {

	// @Test(dataProvider = "dataProvider")
	public void placeOrderBundleDeliveryCE(String country, String state, String storename, String catalogname,
			String productname, String date) throws InterruptedException {

		// bundle

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");

		// confirmOrder.continueShopping().click();

		/////////////////////////////////////////////////////////////////////////////////////////////////
		// // bundle+standalone
		// SpinternetDefaultStoreHome sphome1 = new
		// SpinternetDefaultStoreHome(driver);
		//
		// sphome1.clickOnProduct("Catalog A");
		//
		// Thread.sleep(2000);
		//
		// SpinternetStoreProducts sproducts1 = new
		// SpinternetStoreProducts(driver);
		//
		// sproducts1.clickOnProduct("BM-1");
		//
		// Thread.sleep(2000);
		//
		// SpinternetStoreProductDetails details1 = new
		// SpinternetStoreProductDetails(driver);
		//
		// details1.tmNotes().sendKeys("Item Notes in Item Details papge");
		//
		// details1.addToShoppingCart().click();
		// Thread.sleep(1000);
		//
		// details1.clickCategory("October Item");
		// Thread.sleep(2000);
		//
		// SpinternetStoreProducts sproducts2 = new
		// SpinternetStoreProducts(driver);
		//
		// sproducts2.clickOnProduct1("October Test");
		//
		// Thread.sleep(2000);
		//
		// SpinternetStoreProductDetails details2 = new
		// SpinternetStoreProductDetails(driver);
		//
		// details2.tmNotes().sendKeys("Item Notes in Item Details papge");
		//
		// details2.addToShoppingCart().click();
		// Thread.sleep(1000);
		//
		// Alert alert = driver.switchTo().alert();
		//
		// alert.accept();
		//
		// Thread.sleep(1000);
		//
		// details2.proceedToCheckout().click();
		//
		// Thread.sleep(2000);
		//
		// SpinternetCart cart1 = new SpinternetCart(driver);
		//
		// cart1.proceedToCheckout().click();
		//
		// Thread.sleep(2000);
		//
		// Thread.sleep(2000);
		// SpinternetCheckoutPageOne ckone1 = new
		// SpinternetCheckoutPageOne(driver);
		//
		// Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
		// "Guest checkout Radio button is not selected");
		//
		// ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
		// ckone1.continueButton().click();
		//
		// Thread.sleep(1000);
		//
		// SpinternetCheckoutPageTwo cktwo1 = new
		// SpinternetCheckoutPageTwo(driver);
		// cktwo1.pickupDate();
		// cktwo1.pickupTime();
		// cktwo1.continueButton().click();
		//
		// Thread.sleep(1000);
		//
		// SpinternetCheckoutBillingPage billing = new
		// SpinternetCheckoutBillingPage(driver);
		//
		// billing.firstName().sendKeys("John");
		// billing.lastName().sendKeys("Smith");
		// billing.zip().sendKeys("01803");
		// billing.email().sendKeys("EstoreAutoTest@wholefoods.com");
		// billing.phone().sendKeys("5123227867");
		//
		// billing.continueButton().click();
		// Thread.sleep(1000);
		//
		// Thread.sleep(1000);
		// SpinternetOrderReviewPage re1 = new
		// SpinternetOrderReviewPage(driver);
		//
		// re1.placeOrderButton().click();
		//
		// Thread.sleep(5000);
		// SpinternetOrderConfirmation confirmOrder1 = new
		// SpinternetOrderConfirmation(driver);
		// Assert.assertTrue(confirmOrder1.orderNumber().getText().contentEquals("Your
		// Order # is:"),
		// "Order was not placed");
		//
		// confirmOrder1.continueShopping().click();
		//
		// Thread.sleep(1000);
		// ///////////////////////////////////////////////////////////////////////////////////////////////
		// // standalone
		// SpinternetDefaultStoreHome sphome2 = new
		// SpinternetDefaultStoreHome(driver);
		//
		// sphome2.clickOnProduct("Catalog B");
		//
		// Thread.sleep(2000);
		//
		// SpinternetStoreProducts sproducts3 = new
		// SpinternetStoreProducts(driver);
		//
		// sproducts3.clickOnProduct("MF-1");
		//
		// Thread.sleep(2000);
		//
		// SpinternetStoreProductDetails details4 = new
		// SpinternetStoreProductDetails(driver);
		//
		// details4.tmNotes().sendKeys("Item notes in Item Details Page");
		//
		// details4.addToShoppingCart().click();
		// Thread.sleep(1000);
		//
		// details4.proceedToCheckout().click();
		//
		// Thread.sleep(2000);
		//
		// SpinternetCart cart3 = new SpinternetCart(driver);
		//
		// cart3.proceedToCheckout().click();
		//
		// Thread.sleep(2000);
		//
		// SpinternetCheckoutPageOne ckone3 = new
		// SpinternetCheckoutPageOne(driver);
		//
		// Assert.assertTrue(ckone3.guestCheckoutRadioButtion().isSelected(),
		// "Guest checkout Radio button is not selected");
		//
		// ckone3.email().sendKeys("EstoreAutoTest@wholefoods.com");
		// ckone3.continueButton().click();
		//
		// Thread.sleep(1000);
		//
		// SpinternetCheckoutPageTwo cktwo2 = new
		// SpinternetCheckoutPageTwo(driver);
		// cktwo2.pickupDate();
		// cktwo2.pickupTime();
		// cktwo2.continueButton().click();
		//
		// Thread.sleep(1000);
		//
		// SpinternetCheckoutBillingPage billing1 = new
		// SpinternetCheckoutBillingPage(driver);
		//
		// billing1.firstName().sendKeys("Eileen");
		// billing1.lastName().sendKeys("Jones");
		// billing1.address1().sendKeys("3 Main St");
		// billing1.city().sendKeys("Burlington");
		// billing1.selectCountry("USA");
		// billing1.selectState("Massachusetts");
		// billing1.zip().clear();
		// Thread.sleep(1000);
		// billing1.zip().sendKeys("01803");
		// Thread.sleep(1000);
		// billing1.phone().sendKeys("5124454545");
		//
		// billing1.continueButton().click();
		// Thread.sleep(1000);
		//
		// SpinternetOrderReviewPage review2 = new
		// SpinternetOrderReviewPage(driver);
		// driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		// review2.cardNumber().sendKeys("4457010000000009");
		// review2.cardExpirationMonth();
		// review2.cardExpirationYear();
		// review2.cvv().sendKeys("349");
		// Thread.sleep(1000);
		// driver.switchTo().defaultContent();
		// review2.additionalOrderNotes().sendKeys("Automation Testing of TM
		// notes in Order Review Page");
		// review2.placeOrderWithCC().click();
		// Thread.sleep(5000);
		// SpinternetOrderConfirmation confirmOrder2 = new
		// SpinternetOrderConfirmation(driver);
		// Assert.assertTrue(confirmOrder2.orderNumber().getText().contentEquals("Your
		// Order # is:"),
		// "Order was not placed");
		//
		// confirmOrder2.continueShopping().click();
		// Thread.sleep(1000);
		//
		// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////
		//// // bundle + stand alone
		//// SpinternetDefaultStoreHome sphome3 = new
		//// SpinternetDefaultStoreHome(driver);
		////
		//// // sphome3.clickOnProduct("Catalog G");
		//// sphome3.clickOnProduct("Catalog A");
		////
		//// Thread.sleep(2000);
		////
		//// SpinternetStoreProducts sproducts4 = new
		//// SpinternetStoreProducts(driver);
		////
		//// sproducts4.clickOnProduct("TC-1");
		////
		//// Thread.sleep(2000);
		////
		//// SpinternetStoreProductDetails details5 = new
		//// SpinternetStoreProductDetails(driver);
		////
		//// details5.addToShoppingCart().click();
		//// Thread.sleep(1000);
		////
		//// details5.clickCategory("Catalog A");
		////
		//// Thread.sleep(2000);
		////
		//// SpinternetStoreProducts sproducts5 = new
		//// SpinternetStoreProducts(driver);
		////
		//// sproducts5.clickOnProduct1("BM-1");
		////
		//// Thread.sleep(2000);
		////
		//// SpinternetStoreProductDetails details6 = new
		//// SpinternetStoreProductDetails(driver);
		////
		//// details6.addToShoppingCart().click();
		//// Thread.sleep(1000);
		////
		//// details6.proceedToCheckout().click();
		////
		//// Thread.sleep(2000);
		////
		//// SpinternetCart cart4 = new SpinternetCart(driver);
		////
		//// cart4.proceedToCheckout().click();
		////
		//// Thread.sleep(2000);
		////
		//// SpinternetCheckoutPageOne ckone4 = new
		//// SpinternetCheckoutPageOne(driver);
		////
		//// Assert.assertTrue(ckone4.guestCheckoutRadioButtion().isSelected(),
		//// "Guest checkout Radio button is not selected");
		////
		//// ckone4.email().sendKeys("EstoreAutoTest@wholefoods.com");
		//// ckone4.continueButton().click();
		////
		//// Thread.sleep(1000);
		////
		//// SpinternetCheckoutMethod ckmethod1 = new
		//// SpinternetCheckoutMethod(driver);
		////
		//// ckmethod1.pickupOption().click();
		////
		//// ckmethod1.continueButton().click();
		////
		//// Thread.sleep(1000);
		////
		//// SpinternetCheckoutPageTwo cktwo3 = new
		//// SpinternetCheckoutPageTwo(driver);
		//// cktwo3.pickupDate();
		//// cktwo3.pickupTime();
		//// cktwo3.continueButton().click();
		////
		//// Thread.sleep(1000);
		////
		//// SpinternetCheckoutBillingPage billing2 = new
		//// SpinternetCheckoutBillingPage(driver);
		////
		//// billing2.payInStoreCheckbox().click();
		////
		//// billing2.firstName().sendKeys("John");
		//// billing2.lastName().sendKeys("Smith");
		//// billing2.zip().clear();
		//// Thread.sleep(1000);
		//// billing2.zip().sendKeys("01803");
		//// Thread.sleep(1000);
		//// billing2.email().sendKeys("EstoreAutoTest@wholefoods.com");
		////
		//// billing2.phone().sendKeys("5124454545");
		////
		//// billing2.continueButton().click();
		//// Thread.sleep(1000);
		////
		//// SpinternetOrderReviewPage review3 = new
		//// SpinternetOrderReviewPage(driver);
		//// driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		//// review3.cardNumber().sendKeys("4457010000000009");
		//// review3.cardExpirationMonth();
		//// review3.cardExpirationYear();
		//// review3.cvv().sendKeys("349");
		//// Thread.sleep(1000);
		//// driver.switchTo().defaultContent();
		//// review3.additionalOrderNotes().sendKeys("Automation Testing of TM
		// notes in Order Review Page");
		//// review3.placeOrderWithCC().click();
		//// Thread.sleep(5000);
		//// SpinternetOrderConfirmation confirmOrder3 = new
		//// SpinternetOrderConfirmation(driver);
		//// Assert.assertTrue(confirmOrder3.orderNumber().getText().contentEquals("Your
		// Order # is:"),
		//// "Order was not placed");
		////
		//// confirmOrder3.continueShopping().click();
		//// Thread.sleep(1000);
		//
		// ///////////////////////////////////////////////////////////////////////////////////////////////////////////
		// // stand alone
		//
		// SpinternetDefaultStoreHome sphome4 = new
		// SpinternetDefaultStoreHome(driver);
		//
		// sphome4.clickOnProduct("Catalog C");
		//
		// Thread.sleep(2000);
		//
		// SpinternetStoreProducts sproducts6 = new
		// SpinternetStoreProducts(driver);
		//
		// sproducts6.clickOnProduct("QTY-1");
		//
		// Thread.sleep(2000);
		//
		// SpinternetStoreProductDetails details7 = new
		// SpinternetStoreProductDetails(driver);
		// details7.tmNotes().sendKeys("Item Notes in Item Details papge");
		//
		// details7.addToShoppingCart().click();
		// Thread.sleep(1000);
		//
		// details7.proceedToCheckout().click();
		//
		// Thread.sleep(2000);
		//
		// SpinternetCart cart5 = new SpinternetCart(driver);
		//
		// cart5.proceedToCheckout().click();
		//
		// Thread.sleep(2000);
		//
		// SpinternetCheckoutPageOne ckone5 = new
		// SpinternetCheckoutPageOne(driver);
		//
		// Assert.assertTrue(ckone5.guestCheckoutRadioButtion().isSelected(),
		// "Guest checkout Radio button is not selected");
		//
		// ckone5.email().sendKeys("EstoreAutoTest@wholefoods.com");
		// ckone5.continueButton().click();
		//
		// Thread.sleep(1000);
		//
		// SpinternetCheckoutMethod ckmethod2 = new
		// SpinternetCheckoutMethod(driver);
		//
		// ckmethod2.pickupOption().click();
		//
		// ckmethod2.continueButton().click();
		//
		// Thread.sleep(1000);
		//
		// SpinternetCheckoutPageTwo cktwo4 = new
		// SpinternetCheckoutPageTwo(driver);
		// cktwo4.pickupDate();
		// cktwo4.pickupTime();
		// cktwo4.continueButton().click();
		//
		// Thread.sleep(1000);
		//
		// SpinternetCheckoutBillingPage billing3 = new
		// SpinternetCheckoutBillingPage(driver);
		//
		// billing3.firstName().sendKeys("John");
		// billing3.lastName().sendKeys("Smith");
		// billing3.address1().sendKeys("1 Main St");
		// billing3.city().sendKeys("Burlington");
		// billing3.selectCountry("USA");
		// billing3.selectState("Massachusetts");
		// billing3.zip().clear();
		// Thread.sleep(1000);
		// billing3.zip().sendKeys("01803");
		// Thread.sleep(1000);
		// billing3.phone().sendKeys("5124454545");
		//
		// billing3.continueButton().click();
		// Thread.sleep(1000);
		//
		// SpinternetOrderReviewPage review4 = new
		// SpinternetOrderReviewPage(driver);
		// driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		// review4.cardNumber().sendKeys("4457010000000009");
		// review4.cardExpirationMonth();
		// review4.cardExpirationYear();
		// review4.cvv().sendKeys("349");
		// Thread.sleep(1000);
		// driver.switchTo().defaultContent();
		// review4.additionalOrderNotes().sendKeys("Automation Testing of TM
		// notes in Order Review Page");
		// review4.placeOrderWithCC().click();
		// Thread.sleep(5000);
		// SpinternetOrderConfirmation confirmOrder4 = new
		// SpinternetOrderConfirmation(driver);
		// Assert.assertTrue(confirmOrder4.orderNumber().getText().contentEquals("Your
		// Order # is:"),
		// "Order was not placed");
		//
		// confirmOrder4.continueShopping().click();
		// Thread.sleep(1000);

	}

	// @Test(dataProvider = "dataProvider")
	public void placeOrderBundleAndStandalonePickupCE(String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);

		Alert alert = driver.switchTo().alert();

		alert.accept();

		Thread.sleep(1000);

		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.zip().sendKeys("01803");
		billing.email().sendKeys("EstoreAutoTest@wholefoods.com");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);

		Thread.sleep(1000);
		SpinternetOrderReviewPage re1 = new SpinternetOrderReviewPage(driver);

		re1.placeOrderButton().click();

		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder1 = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder1.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");

	}

	// @Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCF(String catalogname, String productname, String date) throws InterruptedException {

		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cgp1 = new CategoryPageOne(driver);

		cgp1.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);

		sp.addToCart();
		Thread.sleep(2000);
		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.pickupTime();

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}

	// @Test(dataProvider = "dataProvider")
	public void placeOrderPickupCF(String catalogname, String productname, String catalogname1, String productname1,
			String date) throws InterruptedException {

		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		cktwo.storeHome();
		Thread.sleep(1000);

		shp.browseCategory(catalogname1);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);

		Thread.sleep(2000);

		sp.addToCart();
		Thread.sleep(2000);

		sp.clickCheckout();

		Thread.sleep(1000);

		c.proceedToCheckout();

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		Assert.assertTrue(cktwo.payInStoreMessage().contains("Pay in Store"), "Don't see pay in store message");

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("550 Bowie");
		cktwo.city("Austin");

		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");

		cktwo.state("Texas");
		cktwo.zip().sendKeys("78703");

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}

	// @Test(dataProvider = "dataProvider")
	public void placeOrderLMRCF(String catalogname, String productname, String date) throws InterruptedException {

		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + "LMR");

		Thread.sleep(1000);

		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		Thread.sleep(2000);

		CategoryPageOne cgp1 = new CategoryPageOne(driver);
		cgp1.selectProduct(productname);

		ProductDetailsPage pdp1 = new ProductDetailsPage(driver);
		Thread.sleep(2000);

		if (driver.findElement(By.name("itemOption[]")).isDisplayed()) {

			pdp1.selectOption(1);
			Thread.sleep(2000);
			pdp1.addToCartButton().click();
			Thread.sleep(2000);
		}

		else {

			pdp1.addToCartButton().click();
			Thread.sleep(2000);
		}

		pdp1.clickCheckout();

		Thread.sleep(2000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}

	//@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFFL(String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFFL(String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFMA(String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFMA(String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFMW(String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFMW(String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFNA (String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFNA(String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFNC (String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFNC(String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFNE (String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFNE (String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFPN (String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFPN (String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		

	
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFRM (String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFRM (String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		

	

	//@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFSO (String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFSO (String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		

	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryCFSP (String catalogname, String productname, String catalogname1, String productname1,
			String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);

		sp.continueShopping();

		ProductDetailsPage sp1 = new ProductDetailsPage(driver);

		sp1.breadCrum(catalogname);

		CategoryPageOne cp1 = new CategoryPageOne(driver);
		cp.selectProduct(catalogname1);

		Thread.sleep(2000);
		CategoryPageOne cp2 = new CategoryPageOne(driver);
		cp1.selectProduct(productname1);
		Thread.sleep(2000);
		ProductDetailsPage sp2 = new ProductDetailsPage(driver);
		sp2.addToCart();
		Thread.sleep(2000);

		sp2.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectDeliveryOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.shippingFname("Estore");
		cktwo.shippingLname("AutoTest");
		cktwo.shippingStreet1("1 Main St.");
		cktwo.shippingCity("Burlington");
		Assert.assertTrue(cktwo.country().equals("USA"), "Default County is not USA");
		cktwo.shippingState("Massachusetts");
		cktwo.shippingZip().clear();
		cktwo.shippingZip().sendKeys("01803");

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		cktwo.cvvWhatIsThis();
		cktwo.sameAs().click();

		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(1000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);

		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}
	
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupCFSP (String catalogname, String productname, String date, String storename) throws InterruptedException {
		String newUrl = driver.getCurrentUrl();

		String newUrl1 = newUrl.substring(0, newUrl.length() - 3);

		driver.get(driver.getCurrentUrl().substring(0, newUrl.length() - 3) + storename);

		Thread.sleep(1000);
		StoreHomePage shp = new StoreHomePage(driver);

		shp.browseCategory(catalogname);

		CategoryPageOne cp = new CategoryPageOne(driver);
		cp.selectProduct(productname);

		Thread.sleep(2000);

		ProductDetailsPage sp = new ProductDetailsPage(driver);
		sp.addToCart();
		Thread.sleep(2000);


		sp.clickCheckout();

		Thread.sleep(1000);

		Cart c = new Cart(driver);

		c.proceedToCheckout();

		Thread.sleep(1000);

		CheckOutStepOne ckone = new CheckOutStepOne(driver);

		ckone.selectPickupOptions().click();

		Thread.sleep(2000);

		CheckOutStepTwo cktwo = new CheckOutStepTwo(driver);

		Thread.sleep(1000);

		cktwo.email();

		cktwo.pickupDate1(Integer.parseInt(date.substring(0, 1)));

		cktwo.accountNumber("4457010000000009");
		cktwo.expMonth("April");
		cktwo.expYear("2024");
		cktwo.cvv("349");
		driver.switchTo().defaultContent();

		cktwo.fName("Estore");
		cktwo.lName("AutoTest");
		cktwo.streetAddress1("1 Main St.");
		cktwo.city("Burlington");

		cktwo.state("Massachusetts");
		cktwo.zip().clear();
		cktwo.zip().sendKeys("01803");
		cktwo.phone("5124774455");

		cktwo.reviewOrder();
		Thread.sleep(2000);

		CheckOutStepThree ckthree = new CheckOutStepThree(driver);

		ckthree.placeOrder();
		Thread.sleep(5000);
		String ord = new OrderConfirmation(driver).getOrderNumber();

		Assert.assertTrue(ord.length() > 0, "Do not find Order number");

	}		
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryFL (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderPickupFL (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone1.continueButton().click();

		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryMA (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupMA (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone1.continueButton().click();

		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}
	
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryMW (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
	//@Test(dataProvider = "dataProvider")
	public void placeOrderPickupMW (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

		Thread.sleep(2000);
		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);

		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
				"Guest checkout Radio button is not selected");

		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
		ckone1.continueButton().click();

		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryNA (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone.continueButton().click();
//
//		Thread.sleep(1000);
//
//		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");

		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupNA (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

//		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone1.continueButton().click();
//
//		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");

		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(5000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}
	

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryNC (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone.continueButton().click();
//
//		Thread.sleep(1000);
//
//		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		delivery.continueButton().click();
		Thread.sleep(3000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupNC (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

//		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone1.continueButton().click();
//
//		Thread.sleep(1000);
//		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}
	

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryNE (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone.continueButton().click();
//
//		Thread.sleep(1000);
//
//		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupNE (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

//		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone1.continueButton().click();
//
//		Thread.sleep(1000);
//		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryPN (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone.continueButton().click();
//
//		Thread.sleep(1000);
//
//		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
	//	review.placeOrderButton().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupPN (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone1.continueButton().click();
//
//		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliveryRM (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(2000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(2000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone.continueButton().click();
//
//		Thread.sleep(1000);
//
//		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupRM (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

//		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone1.continueButton().click();
//
//		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(1000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(5000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}
	

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliverySO (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone.continueButton().click();
//
//		Thread.sleep(1000);
//
//		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
//	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupSO (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {

		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(2000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(2000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

//		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone1.continueButton().click();
//
//		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(3000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}

//	@Test(dataProvider = "dataProvider")
	public void placeOrderDeliverySP (String country, String state, String storename, String catalogname,String productname, String date) throws InterruptedException{
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);

		SpinternetLogin sp = new SpinternetLogin(driver);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(2000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(2000);
		sp.signOnButton().click();
		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		sphome.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts = new SpinternetStoreProducts(driver);

		sproducts.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details = new SpinternetStoreProductDetails(driver);

		details.tmNotes().sendKeys("Item Notes in Item details Page");

		details.addToShoppingCart().click();
		Thread.sleep(1000);

		details.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart = new SpinternetCart(driver);

		cart.proceedToCheckout().click();

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone.continueButton().click();
//
//		Thread.sleep(1000);

		SpinternetCheckoutPageTwo cktwo = new SpinternetCheckoutPageTwo(driver);

		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.deliveryOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);

		SpinternetCheckoutDelivery delivery = new SpinternetCheckoutDelivery(driver);
		delivery.firstName().sendKeys("Eileen");
		delivery.lastName().sendKeys("Jones");
		delivery.address1().sendKeys("3 Main St");
		delivery.address2().sendKeys("APT#1234");
		delivery.city().sendKeys("Burlington");
		delivery.selectCountry("USA");
		delivery.selectState("Massachusetts");
		delivery.zip().clear();
		Thread.sleep(1000);
		delivery.zip().sendKeys("01803");
		Thread.sleep(1000);
		delivery.phone().sendKeys("5124454545");
		Thread.sleep(2000);
		delivery.deliveryDate(Integer.parseInt(date.substring(0, 1)));
		Thread.sleep(1000);
		delivery.deliveryTime(3);
		Thread.sleep(1000);
		delivery.continueButton().click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_chkBillingSameAsDelivery']")).click();
		Thread.sleep(1000);
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("EstoreAutoTest@wholefoods.com");
		delivery.continueButton().click();
		Thread.sleep(1000);

		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");
		
		
	}
	
	@Test(dataProvider = "dataProvider")
	public void placeOrderPickupSP (String country, String state, String storename,
			String catalogname, String productname, String catalogname1, String productname1, String date)
			throws InterruptedException {
		
		driver.manage().deleteAllCookies();
		Thread.sleep(2000);
		
		
		
		driver.get("https://shop-admin-qa.ecomm.wholefoodsmarket.com/spinternet/e-commerce/orderList.aspx");

		Thread.sleep(2000);
		
		
		
		

		SpinternetLogin sp = new SpinternetLogin(driver);
		
		
		Thread.sleep(2000);

		sp.userName().sendKeys(testConfig.getProperty("username"));

		sp.nextButton().click();
		Thread.sleep(1000);
		sp.password().sendKeys(testConfig.getProperty("password"));
		Thread.sleep(1000);
		sp.signOnButton().click();
		Thread.sleep(3000);
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

//		sp.userName().sendKeys(testConfig.getProperty("username"));
//
//		sp.nextButton().click();
//		Thread.sleep(2000);
//		sp.password().sendKeys(testConfig.getProperty("password"));
//		Thread.sleep(2000);
//		sp.signOnButton().click();
//		Thread.sleep(2000);

		SpinternetHome sh = new SpinternetHome(driver);
		Thread.sleep(2000);

//		WebElement element = driver.findElement(By.xpath("//INPUT[@id='ctl00_ContentPlaceHolder1_chkAgree']"));
//
//		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
//
//		sp.agreementCheckbox().click();
//		Thread.sleep(1000);
//		sp.okayButton().click();
//		Thread.sleep(1000);

		sh.clickOnFulfillmnet().click();
		Thread.sleep(2000);
		sh.clickOnOrderOperation("Create Order");
		Thread.sleep(2000);

		String winHandleBefore = driver.getWindowHandle();

		Thread.sleep(2000);

		TMCreateOrder order = new TMCreateOrder(driver);

		for (String winHandle : driver.getWindowHandles()) {
			driver.switchTo().window(winHandle);
		}
		order.selectCountry(country);
		Thread.sleep(2000);
		order.selectState(state);
		Thread.sleep(2000);
		order.goButton().click();
		Thread.sleep(2000);

		SpinternetStoreFinderResults stores = new SpinternetStoreFinderResults(driver);

		stores.clickOnPlaceOrderLink(storename);

		Thread.sleep(2000);

		SpinternetDefaultStoreHome sphome = new SpinternetDefaultStoreHome(driver);

		SpinternetDefaultStoreHome sphome1 = new SpinternetDefaultStoreHome(driver);

		sphome1.clickOnProduct(catalogname);

		Thread.sleep(2000);

		SpinternetStoreProducts sproducts1 = new SpinternetStoreProducts(driver);

		sproducts1.clickOnProduct(productname);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details1 = new SpinternetStoreProductDetails(driver);

		details1.tmNotes().sendKeys("Item Notes in Item Details papge");

		details1.addToShoppingCart().click();
		Thread.sleep(1000);

		details1.clickCategory(catalogname1);
		Thread.sleep(2000);

		SpinternetStoreProducts sproducts2 = new SpinternetStoreProducts(driver);

		sproducts2.clickOnProduct1(productname1);

		Thread.sleep(2000);

		SpinternetStoreProductDetails details2 = new SpinternetStoreProductDetails(driver);

		details2.tmNotes().sendKeys("Item Notes in Item Details papge");

		details2.addToShoppingCart().click();
		Thread.sleep(1000);


		details2.proceedToCheckout().click();

		Thread.sleep(2000);

		SpinternetCart cart1 = new SpinternetCart(driver);

		cart1.proceedToCheckout().click();

		Thread.sleep(2000);

		Thread.sleep(2000);
//		SpinternetCheckoutPageOne ckone1 = new SpinternetCheckoutPageOne(driver);
//
//		Assert.assertTrue(ckone1.guestCheckoutRadioButtion().isSelected(),
//				"Guest checkout Radio button is not selected");
//
//		ckone1.email().sendKeys("EstoreAutoTest@wholefoods.com");
//		ckone1.continueButton().click();
//
//		Thread.sleep(1000);
		
		SpinternetCheckoutMethod ckmethod = new SpinternetCheckoutMethod(driver);

		ckmethod.pickupOption().click();
		ckmethod.continueButton().click();

		Thread.sleep(2000);
		
		SpinternetCheckoutPageTwo cktwo1 = new SpinternetCheckoutPageTwo(driver);
		cktwo1.pickupDate(Integer.parseInt(date.substring(0, 1)));
		cktwo1.pickupTime();
		cktwo1.continueButton().click();

		Thread.sleep(3000);

		SpinternetCheckoutBillingPage billing = new SpinternetCheckoutBillingPage(driver);

		billing.firstName().sendKeys("John");
		billing.lastName().sendKeys("Smith");
		billing.address1().sendKeys("1 main st");
		billing.city().sendKeys("burlington");
		billing.selectCountry("USA");
		billing.selectState("Massachusetts");
		billing.zip().clear();
		billing.zip().sendKeys("01803");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtEmail']")).sendKeys("ramesh.dhanekula@wholefoods.com");
		driver.findElement(By.xpath("//input[@id='ctl00_cph_main_content_txtConfirmEmail']")).sendKeys("ramesh.dhanekula@wholefoods.com");

		billing.phone().sendKeys("5123227867");

		billing.continueButton().click();
		Thread.sleep(1000);
		
		
		SpinternetOrderReviewPage review = new SpinternetOrderReviewPage(driver);
		driver.switchTo().frame(driver.findElement(By.id("vantiv-payframe")));
		review.cardNumber().sendKeys("4457010000000009");
		review.cardExpirationMonth();
		review.cardExpirationYear();
		review.cvv().sendKeys("349");
		Thread.sleep(1000);
		driver.switchTo().defaultContent();
		review.additionalOrderNotes().sendKeys("Automation Testing of TM notes in Order Review Page");
		review.placeOrderWithCC().click();
		Thread.sleep(5000);
		SpinternetOrderConfirmation confirmOrder = new SpinternetOrderConfirmation(driver);
		Assert.assertTrue(confirmOrder.orderNumber().getText().contentEquals("Your Order # is:"),
				"Order was not placed");


	}
	
	
	
	
}
